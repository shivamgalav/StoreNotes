{"version":3,"sources":["components/Card.js","components/Form.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","useState","edit","setEdit","text","setText","title","settitle","className","style","width","type","id","value","onChange","event","target","rows","onClick","window","confirm","data","splice","findIndex","a","update","localStorage","JSON","stringify","objIndex","obj","parse","key","Form","forceUpdate","setValue","useForceUpdate","htmlFor","color","placeholder","push","clear","display","flexWrap","map","dt","Navbar","mode","href","setdark","backgroundColor","App","darkMode","setdarkMode","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.13d7cf1b.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\nfunction Card(props) {\r\n    const [edit, setEdit] = useState(false);\r\n    const [text, setText] = useState(props.text);\r\n    const [title, settitle] = useState(props.title);\r\n    const handleChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    const handleTitle = (event)=>{\r\n        settitle(event.target.value);\r\n    }\r\n    const handleDelete = ()=>{\r\n        if(window.confirm(\"Are u sure to Delete!!\")){\r\n            props.data.splice(props.data.findIndex(a => a.id === props.id) , 1);\r\n            props.update();\r\n            localStorage.data = JSON.stringify(props.data);\r\n        }\r\n        // console.log(props.data);\r\n    }\r\n    const handleEdit = ()=>{\r\n        setEdit(true);\r\n    }\r\n    const confirmEdit =()=>{\r\n        setEdit(false);\r\n        const objIndex = props.data.findIndex((obj => obj.id === props.id));\r\n\r\n        //Log object to Console.\r\n        // console.log(\"Before update: \", myArray[objIndex])\r\n\r\n        //Update object's name property.\r\n        props.data[objIndex].text = text;\r\n        props.data[objIndex].title = title;\r\n        localStorage.data = JSON.stringify(props.data);\r\n        //Log object to console again.\r\n        // console.log(\"After update: \", myArray[objIndex])\r\n    }\r\n    return (\r\n        <>\r\n        {\r\n        <div className=\"mx-3 my-2\">\r\n            <div className=\"card\" style={{width : \"18rem\"}}>\r\n            <div className=\"card-body\" style={props.style}>\r\n                {edit && <input type=\"title\" className=\"form-control\" style = {props.style} id=\"exampleFormControlInput1\" \r\n                value={title} onChange ={handleTitle} />}\r\n                {!edit && <h5 className=\"card-title\">{title}</h5>}\r\n                {edit && <textarea className=\"form-control my-3\" style = {props.style} id=\"exampleFormControlTextarea1\" rows=\"3\" \r\n                value={text} onChange={handleChange}></textarea>}\r\n                {!edit && <p className=\"card-text\">{text}</p>}\r\n                <button type=\"button\" className=\"btn btn-outline-danger mx-2\" onClick={handleDelete}>Delete</button>\r\n                <button type=\"button\" className=\"btn btn-outline-info\" onClick={handleEdit}>Edit</button>\r\n                {edit && <button type=\"button\" className=\"btn btn-primary btn-sm mx-2 my-2\" onClick={confirmEdit}>Confirm Edit</button>}\r\n            </div>\r\n            </div>\r\n        </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React, { useState } from 'react'\r\nimport Card from './Card';\r\n\r\nif(!localStorage.data){\r\n    let emparr=[];\r\n    localStorage.data = JSON.stringify(emparr);\r\n}\r\nlet data =JSON.parse(localStorage.data);\r\nfunction useForceUpdate(){\r\n    // eslint-disable-next-line\r\n    const [value, setValue] = useState(0); // integer state\r\n    return () => setValue(value => value + 1); // update the state to force render\r\n}\r\nlet key = 0;\r\nfunction Form(props) {\r\n    const [text, setText] = useState(\"\");\r\n    const [title, settitle] = useState(\"\");\r\n    const handleChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    const handleTitle = (event)=>{\r\n        settitle(event.target.value);\r\n    }\r\n    const clearAll = ()=>{\r\n        if(window.confirm(\"This Action will Delete all Notes!!\")){\r\n            localStorage.clear();\r\n            data=[];\r\n            localStorage.data = JSON.stringify(data);\r\n            forceUpdate();\r\n        }\r\n    }\r\n    const handleClick = () => {\r\n        const obj = {id:`${key}`,title: title,\r\n                    text:text};\r\n        key++;\r\n        data.push(obj);\r\n        localStorage.data = JSON.stringify(data);\r\n        // console.log(data);\r\n        forceUpdate();\r\n    }\r\n    const forceUpdate = useForceUpdate();\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\" style= {{color: `${props.style.color}`}}>Heading</label>\r\n                <input type=\"email\" className=\"form-control\" style = {props.style} id=\"exampleFormControlInput1\" \r\n                placeholder=\"Enter Heading Here....\" onChange ={handleTitle} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\" style= {{color: `${props.style.color}`}}>Notes Text</label>\r\n                <textarea className=\"form-control\" style = {props.style} id=\"exampleFormControlTextarea1\" rows=\"3\" \r\n                value={text} onChange={handleChange} placeholder=\"Enter Notes Here....\"></textarea>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={handleClick}>Add</button>\r\n            <button type=\"button\" className=\"btn btn-warning mx-2\" onClick={clearAll}>Clear All Notes</button>\r\n            <div className=\"my-3\" style={{display:\"flex\",flexWrap:\"wrap\"}}>\r\n            {data.map(dt=>(\r\n                <Card key={dt.id} text={dt.text} id={dt.id} title={dt.title} style = {props.style} data={data} update={forceUpdate}/>\r\n            ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react'\r\n\r\nfunction Navbar(props) {\r\n    \r\n    return (\r\n        <>\r\n        <nav className={`navbar navbar-expand-lg navbar-light bg-${props.mode === false?\"light\":\"dark\"}`}>\r\n        <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"/StoreNotes/\" style= {{color: `${props.style.color}`}}>StoreNotes</a>\r\n            <div className=\"form-check form-switch\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick = {props.setdark}/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" style= {{color: `${props.style.color}`}}>Dark Mode</label>\r\n            </div>\r\n        </div>\r\n        </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import './App.css';\r\n// import Card from './components/Card';\r\nimport Form from './components/Form';\r\nimport React, { useState } from 'react'\r\nimport Navbar from './components/Navbar';\r\nlet style = {\r\n  color : \"black\",\r\n  backgroundColor: \"white\"\r\n}\r\nfunction App() {\r\n  \r\n  const [darkMode, setdarkMode] = useState(false);\r\n  const changeMode = ()=>{\r\n    if(darkMode === false){\r\n      setdarkMode(true);\r\n      style = {\r\n        color : \"white\",\r\n        backgroundColor: \"black\"\r\n      }\r\n      document.body.style.backgroundColor = \"#313131\"\r\n    }\r\n    else{\r\n      setdarkMode(false);\r\n      style = {\r\n        color : \"black\",\r\n        backgroundColor: \"white\"\r\n      }\r\n      document.body.style.backgroundColor = \"white\"\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n    <Navbar setdark = {changeMode} mode = {darkMode} style = {style}/>\r\n    <Form mode = {darkMode} style = {style}/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
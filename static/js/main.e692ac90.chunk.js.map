{"version":3,"sources":["components/Card.js","components/Form.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","useState","show","setShow","edit","setEdit","text","setText","title","settitle","className","style","width","type","id","value","onChange","event","target","rows","onClick","data","splice","findIndex","a","objIndex","obj","key","Form","showCard","setshowCard","forceUpdate","setValue","useForceUpdate","htmlFor","color","placeholder","push","display","flexWrap","map","dt","Navbar","mode","href","setdark","backgroundColor","App","darkMode","setdarkMode","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e692ac90.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\nfunction Card(props) {\r\n    const [show, setShow] = useState(true);\r\n    const [edit, setEdit] = useState(false);\r\n    const [text, setText] = useState(props.text);\r\n    const [title, settitle] = useState(props.title);\r\n    const handleChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    const handleTitle = (event)=>{\r\n        settitle(event.target.value);\r\n    }\r\n    const handleDelete = ()=>{\r\n        setShow(false);\r\n        props.data.splice(props.data.findIndex(a => a.id === props.id) , 1);\r\n        // console.log(props.data);\r\n    }\r\n    const handleEdit = ()=>{\r\n        setEdit(true);\r\n    }\r\n    const confirmEdit =()=>{\r\n        setEdit(false);\r\n        const objIndex = props.data.findIndex((obj => obj.id === props.id));\r\n\r\n        //Log object to Console.\r\n        // console.log(\"Before update: \", myArray[objIndex])\r\n\r\n        //Update object's name property.\r\n        props.data[objIndex].text = text;\r\n        props.data[objIndex].title = title;\r\n\r\n        //Log object to console again.\r\n        // console.log(\"After update: \", myArray[objIndex])\r\n    }\r\n    return (\r\n        <>\r\n        {\r\n        show && <div className=\"mx-3 my-2\">\r\n            <div className=\"card\" style={{width : \"18rem\"}}>\r\n            <div className=\"card-body\" style={props.style}>\r\n                {edit && <input type=\"title\" className=\"form-control\" style = {props.style} id=\"exampleFormControlInput1\" \r\n                value={title} onChange ={handleTitle} />}\r\n                {!edit && <h5 className=\"card-title\">{title}</h5>}\r\n                {edit && <textarea className=\"form-control my-3\" style = {props.style} id=\"exampleFormControlTextarea1\" rows=\"3\" \r\n                value={text} onChange={handleChange}></textarea>}\r\n                {!edit && <p className=\"card-text\">{text}</p>}\r\n                <button type=\"button\" className=\"btn btn-outline-danger mx-2\" onClick={handleDelete}>Delete</button>\r\n                <button type=\"button\" className=\"btn btn-outline-info\" onClick={handleEdit}>Edit</button>\r\n                {edit && <button type=\"button\" className=\"btn btn-primary btn-sm mx-2 my-2\" onClick={confirmEdit}>Confirm Edit</button>}\r\n            </div>\r\n            </div>\r\n        </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React, { useState } from 'react'\r\nimport Card from './Card';\r\nconst data = [];\r\nfunction useForceUpdate(){\r\n    // eslint-disable-next-line\r\n    const [value, setValue] = useState(0); // integer state\r\n    return () => setValue(value => value + 1); // update the state to force render\r\n}\r\nlet key = 0;\r\nfunction Form(props) {\r\n    \r\n    const [text, setText] = useState(\"\");\r\n    const [showCard, setshowCard] = useState(false);\r\n    const [title, settitle] = useState(\"\")\r\n    const handleChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    const handleTitle = (event)=>{\r\n        settitle(event.target.value);\r\n    }\r\n    const handleClick = () => {\r\n        const obj = {id:`${key}`,title: title,\r\n                    text:text};\r\n        key++;\r\n        data.push(obj);\r\n        setshowCard(true);\r\n        // console.log(data);\r\n        forceUpdate();\r\n    }\r\n    const forceUpdate = useForceUpdate();\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\" style= {{color: `${props.style.color}`}}>Heading</label>\r\n                <input type=\"email\" className=\"form-control\" style = {props.style} id=\"exampleFormControlInput1\" \r\n                placeholder=\"Enter Heading Here....\" onChange ={handleTitle} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\" style= {{color: `${props.style.color}`}}>Note Text</label>\r\n                <textarea className=\"form-control\" style = {props.style} id=\"exampleFormControlTextarea1\" rows=\"3\" \r\n                value={text} onChange={handleChange} placeholder=\"Enter Notes Here....\"></textarea>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={handleClick}>Submit</button>\r\n            <div className=\"my-3\" style={{display:\"flex\",flexWrap:\"wrap\"}}>\r\n            {showCard && data.map(dt=>(\r\n                <Card key={dt.id} text={dt.text} id={dt.id} title={dt.title} style = {props.style} data={data}/>\r\n            ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react'\r\n\r\nfunction Navbar(props) {\r\n    \r\n    return (\r\n        <>\r\n        <nav className={`navbar navbar-expand-lg navbar-light bg-${props.mode === false?\"light\":\"dark\"}`}>\r\n        <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"/\" style= {{color: `${props.style.color}`}}>Navbar</a>\r\n            <div className=\"form-check form-switch\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick = {props.setdark}/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" style= {{color: `${props.style.color}`}}>Dark Mode</label>\r\n            </div>\r\n        </div>\r\n        </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import './App.css';\n// import Card from './components/Card';\nimport Form from './components/Form';\nimport React, { useState } from 'react'\nimport Navbar from './components/Navbar';\nlet style = {\n  color : \"black\",\n  backgroundColor: \"white\"\n}\nfunction App() {\n  \n  const [darkMode, setdarkMode] = useState(false);\n  const changeMode = ()=>{\n    if(darkMode === false){\n      setdarkMode(true);\n      style = {\n        color : \"white\",\n        backgroundColor: \"black\"\n      }\n      document.body.style.backgroundColor = \"#313131\"\n    }\n    else{\n      setdarkMode(false);\n      style = {\n        color : \"black\",\n        backgroundColor: \"white\"\n      }\n      document.body.style.backgroundColor = \"white\"\n    }\n  }\n  return (\n    <>\n    <Navbar setdark = {changeMode} mode = {darkMode} style = {style}/>\n    <Form mode = {darkMode} style = {style}/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}